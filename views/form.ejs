<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
        }

        form {
            margin-top: 20px;
        }

        label {
            font-weight: bold;
        }

        input[type="text"],
        input[type="checkbox"],
        textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        input[type="submit"] {
            background-color: #4caf50;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

        input[type="submit"]:hover {
            background-color: #45a049;
        }

        /* Style for logout button */
        .logout-btn {
            background-color: #f44336;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 20px;
        }

        .logout-btn:hover {
            background-color: #dc3545;
        }

        #items {
            border: 1px solid gray;
            padding: 0.4rem;
            border-radius: 0.6rem;
        }

        .item {
            border: 1px solid blue;
            padding: 0.4rem;
            border-radius: 0.6rem;
            margin-top: 1rem;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Invoice Form</h1>
        <form id="invoiceForm">
            <label for="to_company_name">Company Name:</label>
            <input type="text" id="to_company_name" name="to_company_name" value="Bombay Crimpers Pvt Ltd" required>

            <label for="to_company_address">Company Address:</label>
            <textarea id="to_company_address" name="to_company_address"
                required>Kalyan , Bhiwandi road , Saroli Bhiwandi , Thane</textarea>

            <label for="to_company_gst_no">Company Gst:</label>
            <input type="text" id="to_company_gst_no" name="to_company_gst_no" value="27AAACB7204N1ZM" required>

            <label for="place_of_supply">Place of Supply:</label>
            <input type="text" id="place_of_supply" name="place_of_supply" value="M.H." required>

            <label for="invoice_no">Invoice No:</label>
            <input type="text" id="invoice_no" name="invoice_no" value="051/23-24" required>

            <label for="receipt_date">Receipt Date:</label>
            <input type="text" id="receipt_date" name="receipt_date" value="03.01.2024" required>

            <label for="po_no">PO No:</label>
            <input type="text" id="po_no" name="po_no" value="359" required>

            <label for="po_no_date">PO No Date:</label>
            <input type="text" id="po_no_date" name="po_no_date" value="02/01/24" required>

            <label for="challan_no">Challan No:</label>
            <input type="text" id="challan_no" name="challan_no" value="0108" required>

            <label for="challan_no_date">Challan No Date:</label>
            <input type="text" id="challan_no_date" name="challan_no_date" value="02/01/24" required>

            <!-- Loop through items array -->
            <label>Items:</label><br>
            <div id="items">
                <div class="item">
                    <label>Description of Service:</label>
                    <input type="text" name="description_of_service" value="1st Back Gear Pinion Shaft" required>
                    <label>HSN Code:</label>
                    <input type="text" name="hsn_code" value="8431">
                    <label>Size:</label>
                    <input type="text" name="size" value="0">
                    <label>Weight in kg or nos:</label>
                    <input type="text" name="weight_in_kg_or_nos" value="0">
                    <label>Qty nos or kg:</label>
                    <input type="text" name="qty_nos_or_kg" value="2" required>
                    <label>Rate in Rs. per piece:</label>
                    <input type="text" name="rate_in_rs_p_p" value="5930" required>
                    <label>Amount:</label>
                    <input type="text" name="amount" value="11860" required>
                </div>
            </div>
            <button type="button" id="addItemBtn">Add Item</button>

            <br>

            <label for="total">Total:</label>
            <input type="text" id="total" name="total" value="16860" required>

            <label for="cgst">CGST:</label>
            <input type="text" id="cgst" name="cgst" value="1517" required>

            <label for="sgst">SGST:</label>
            <input type="text" id="sgst" name="sgst" value="1517" required>

            <label for="final_total">Final Total:</label>
            <input type="text" id="final_total" name="final_total" value="19894" required>

            <label for="final_total_in_words">Final Total in Words:</label>
            <input type="text" id="final_total_in_words" name="final_total_in_words"
                value="Ninteen thousand Eight hundered Ninty Four only" required>

            <input type="submit" value="Submit">
        </form>
        <!-- Logout button -->
        <button class="logout-btn" id="logoutBtn">Logout</button>
    </div>
    <script>
        // Function to calculate amount based on quantity and rate
        function calculateAmount(itemDiv) {
            let qty = parseFloat(itemDiv.querySelector('input[name="qty_nos_or_kg"]').value);
            let rate = parseFloat(itemDiv.querySelector('input[name="rate_in_rs_p_p"]').value);
            let amount = isNaN(qty) || isNaN(rate) ? 0 : qty * rate;
            itemDiv.querySelector('input[name="amount"]').value = amount.toFixed(2); // Display amount with 2 decimal places
            return amount;
        }

        // Function to calculate total amount
        function calculateTotal() {
            let total = 0;
            let itemDivs = document.querySelectorAll('.item');
            itemDivs.forEach(function (itemDiv) {
                total += calculateAmount(itemDiv);
            });
            document.getElementById('total').value = total.toFixed(2); // Display total with 2 decimal places
            return total;
        }

        // Function to calculate CGST and SGST
        function calculateCGST_SGST() {
            let total = calculateTotal();
            let cgst = total * 0.09; // CGST rate is 9%
            let sgst = cgst; // SGST rate is also 9%
            document.getElementById('cgst').value = cgst.toFixed(2);
            document.getElementById('sgst').value = sgst.toFixed(2);
            return {
                cgst: cgst,
                sgst: sgst
            };
        }

        // Function to calculate final total
        function calculateFinalTotal() {
            let total = calculateTotal();
            let cgst_sgst = calculateCGST_SGST();
            let finalTotal = total + cgst_sgst.cgst + cgst_sgst.sgst;
            document.getElementById('final_total').value = finalTotal.toFixed(2);
            let finalTotalInWords = convertNumberToWords(finalTotal); // Convert final total to words
            document.getElementById('final_total_in_words').value = finalTotalInWords;
            return finalTotal;
        }

        // Function to convert number to words
        function convertNumberToWords(number) {
            let units = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'];
            let teens = ['Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];
            let tens = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];

            if (number == 0) {
                return 'Zero';
            }

            // Function to recursively convert numbers to words
            function convertToWords(num) {
                let words = '';

                if (num < 10) {
                    words += units[num];
                } else if (num < 20) {
                    words += teens[num - 10];
                } else if (num < 100) {
                    words += tens[Math.floor(num / 10)];
                    if (num % 10 !== 0) {
                        words += ' ' + units[num % 10];
                    }
                } else if (num < 1000) {
                    words += units[Math.floor(num / 100)] + ' Hundred';
                    if (num % 100 !== 0) {
                        words += ' and ' + convertToWords(num % 100);
                    }
                } else if (num < 1000000) {
                    words += convertToWords(Math.floor(num / 1000)) + ' Thousand';
                    if (num % 1000 !== 0) {
                        words += ' ' + convertToWords(num % 1000);
                    }
                } else if (num < 1000000000) {
                    words += convertToWords(Math.floor(num / 1000000)) + ' Million';
                    if (num % 1000000 !== 0) {
                        words += ' ' + convertToWords(num % 1000000);
                    }
                } else {
                    words += convertToWords(Math.floor(num / 1000000000)) + ' Billion';
                    if (num % 1000000000 !== 0) {
                        words += ' ' + convertToWords(num % 1000000000);
                    }
                }

                return words;
            }

            let words = convertToWords(Math.floor(number));
            let decimalPart = Math.round((number - Math.floor(number)) * 100); // Get the decimal part
            if (decimalPart > 0) {
                words += ' and ' + convertToWords(decimalPart) + ' Paisa'; // Append Paisa for decimal part
            }
            return words;
        }

        document.getElementById('invoiceForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Calculate final total
            calculateFinalTotal();

            // Serialize form data into JSON object
            var formData = {};
            var formElements = this.elements;
            for (var i = 0; i < formElements.length; i++) {
                var element = formElements[i];
                if (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA' || element.tagName === 'SELECT') {
                    formData[element.name] = element.value;
                }
            }

            // Extract item details
            var items = [];
            var itemDivs = document.querySelectorAll('.item');
            itemDivs.forEach(function (itemDiv, index) {
                var item = {
                    "sr_no": index + 1,
                    "description_of_service": itemDiv.querySelector('input[name="description_of_service"]').value,
                    "hsn_code": itemDiv.querySelector('input[name="hsn_code"]').value,
                    "size": itemDiv.querySelector('input[name="size"]').value,
                    "weight_in_kg_or_nos": itemDiv.querySelector('input[name="weight_in_kg_or_nos"]').value,
                    "qty_nos_or_kg": itemDiv.querySelector('input[name="qty_nos_or_kg"]').value,
                    "rate_in_rs_p_p": itemDiv.querySelector('input[name="rate_in_rs_p_p"]').value,
                    "amount": itemDiv.querySelector('input[name="amount"]').value
                };
                items.push(item);
            });

            formData.items = items;

            try {
                // Send JSON data to the server using Fetch API
                const response = await fetch('/api/download-invoice', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ dataBinding: formData })
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                // Convert response to blob (binary data)
                const blob = await response.blob();

                // Create a temporary URL for the blob
                const url = window.URL.createObjectURL(blob);

                // Create a temporary link element
                const a = document.createElement('a');
                a.href = url;
                a.download = 'invoice.pdf'; // Set the filename
                a.click();

                // Cleanup
                window.URL.revokeObjectURL(url);

                console.log('Invoice downloaded successfully');
            } catch (error) {
                console.error('Error downloading invoice:', error);
            }
        });

        // Event listener for adding item
        document.getElementById('addItemBtn').addEventListener('click', function () {
            let itemsDiv = document.getElementById('items');
            let newItemDiv = document.createElement('div');
            newItemDiv.className = 'item';
            newItemDiv.innerHTML = `
    <label>Description of Service:</label>
    <input type="text" name="description_of_service" required>
    <label>HSN Code:</label>
    <input type="text" name="hsn_code">
    <label>Size:</label>
    <input type="text" name="size">
    <label>Weight in kg or nos:</label>
    <input type="text" name="weight_in_kg_or_nos">
    <label>Qty nos or kg:</label>
    <input type="text" name="qty_nos_or_kg" onchange="calculateAmount(this.parentNode)">
    <label>Rate in Rs. per piece:</label>
    <input type="text" name="rate_in_rs_p_p" onchange="calculateAmount(this.parentNode)">
    <label>Amount:</label>
    <input type="text" name="amount" readonly>
    <button type="button" class="removeItemBtn">Remove</button>
`;

            itemsDiv.appendChild(newItemDiv);

            // Attach event listeners for newly added inputs
            let inputs = newItemDiv.querySelectorAll('input[name="qty_nos_or_kg"], input[name="rate_in_rs_p_p"]');
            inputs.forEach(function (input) {
                input.addEventListener('input', function () {
                    calculateAmount(newItemDiv); // Calculate amount when quantity or rate is changed
                    calculateTotal(); // Recalculate total
                    calculateCGST_SGST(); // Recalculate CGST and SGST
                    calculateFinalTotal(); // Recalculate final total
                });
            });
        });

        // Event listener for removing item
        document.addEventListener('click', function (event) {
            if (event.target && event.target.className == 'removeItemBtn') {
                event.target.parentNode.remove();
                calculateTotal(); // Recalculate total when an item is removed
            }
        });

        // Event listeners for dynamically updating values
        let inputs = document.querySelectorAll('input[name="qty_nos_or_kg"], input[name="rate_in_rs_p_p"]');
        inputs.forEach(function (input) {
            input.addEventListener('input', function () {
                calculateAmount(this.parentNode.parentNode); // Calculate amount when quantity or rate is changed
                calculateTotal(); // Recalculate total
                calculateCGST_SGST(); // Recalculate CGST and SGST
                calculateFinalTotal(); // Recalculate final total
            });
        });

        // Event listener for logout button click
        document.getElementById('logoutBtn').addEventListener('click', async function () {
            try {
                // Send a request to the logout route
                const response = await fetch('/logout', {
                    method: 'GET'
                });

                if (response.ok) {
                    // Redirect to the login page after successful logout
                    window.location.href = '/login';
                } else {
                    throw new Error('Failed to logout');
                }
            } catch (error) {
                console.error('Error logging out:', error);
            }
        });
    </script>

</body>

</html>